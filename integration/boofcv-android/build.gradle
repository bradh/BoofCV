plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.10'
}

// Forsake the standard Android build environment since it's too complex

// Find all the possible versions of android that it could use and use the most recent
ext.ANDROID_HOME = System.getenv()['ANDROID_HOME'];
ext.ANDROID_PLATFORMS = new File((String)ext.ANDROID_HOME+"/platforms").list().grep{it.contains("android-")}

if( ext.ANDROID_PLATFORMS.isEmpty() ) {
    ext.ANDROID_PLATFORMS = new File((String)ext.ANDROID_HOME).list().grep{it.contains("android-")}
    if( ext.ANDROID_PLATFORMS.isEmpty() )
        throw new RuntimeException("Can't find any platforms in "+ext.ANDROID_HOME+"/platforms")
    else
        ext.ANDROID_PATH = ext.ANDROID_HOME+ext.ANDROID_PLATFORMS.sort().last()
} else
    ext.ANDROID_PATH = ext.ANDROID_HOME+"/platforms/"+ext.ANDROID_PLATFORMS.sort().last()

ext.ANDROID_VERSION = ext.ANDROID_PATH.substring(ext.ANDROID_PATH.indexOf('-')+1,ext.ANDROID_PATH.length())

println "Build Android module using $ext.ANDROID_PATH"
println "Android version is $ext.ANDROID_VERSION"

// disable tests since they can't be run on a regular desktop
test.enabled = false

repositories {
    maven {
        url 'https://maven.google.com/'
        name 'Google'
    }
}

task unzipJar(type: Copy) {
    from zipTree('commons-collections-3.2.jar')
    into ("$buildDir/libs/commons-collection")
    include "**/*.class"
    exclude "**/Unmodifiable.class"
}

try {
    if( Integer.parseInt(ext.ANDROID_VERSION) >= 29 ) {
        println("WARNING!!! javadoc will fail with this version of Android")
    }
} catch (NumberFormatException e) {
    // Did Google just switch their versions to letter?? BAD GOOGLE!
    System.err.println("Bad number format for version: "+ext.ANDROID_VERSION)
    System.err.println(e.getMessage());
}

dependencies {
    api project(':main:boofcv-ip')
    api project(':main:boofcv-feature')
    api project(':main:boofcv-geo')

    // Google doesn't provide access to an android.jar
    // A proper android library could be built but that seems to make
    // the build become wonky and IntelliJ doesn't like it. This is less error prone
    implementation fileTree(dir: ANDROID_PATH, include: '*.jar')
    implementation fileTree(dir: ANDROID_PATH+'data/', include: '*.jar')

    // This imports files as aar which require extra work to import
    // instead I modified the code to not require them
    compileOnly 'com.android.support:support-media-compat:27.1.1'
    compileOnly 'androidx.core:core-ktx:1.9.0'
    compileOnly 'androidx.appcompat:appcompat:1.5.1'
    compileOnly 'androidx.constraintlayout:constraintlayout:2.1.4'

    def navigation_version = "2.5.2"
    compileOnly "androidx.navigation:navigation-common:$navigation_version"
    compileOnly "androidx.navigation:navigation-ui:$navigation_version"
    compileOnly "androidx.navigation:navigation-ui-ktx:$navigation_version"
    compileOnly "androidx.navigation:navigation-fragment:$navigation_version"
    compileOnly "androidx.navigation:navigation-fragment-ktx:$navigation_version"

    def lifecycle_version = "2.5.1"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata:2.0.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-core:$lifecycle_version"

    compileOnly 'androidx.fragment:fragment:1.5.2'
    compileOnly 'androidx.fragment:fragment-ktx:1.5.2'
    compileOnly 'org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.1'

}

compileKotlin     { kotlinOptions.jvmTarget = "11" }
compileTestKotlin { kotlinOptions.jvmTarget = "11" }